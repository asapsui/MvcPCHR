@model MvcPCHR.Models.LoginViewModel
@{
    ViewData["Title"] = "Home Page";
}
<div>
    @ViewBag.ConnectionString
</div>

<div class="text-center">
    <h1 class="display-4">Welcome to Your Health Record!</h1>
</div>

<hr />

<div class="container mt-5">
    <div class="row justify-content-center align-items-center">
        <div class="col-sm-12 col-md-12 col-lg-4">
            <!-- using POST for the method, since GET would expose the user's password through the url and in the default server logs-->
            <form asp-action="ValidateLogin" asp-controller="Account" name="registerform" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="mb-3">
                    <label asp-for="Username" class="form-label">Username</label>
                    <input asp-for="Username" class="form-control" />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Password" class="form-label">Password</label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <!-- use the name "login" or "submit" for error handling when we use in C#-->
                    <button type="submit" name="login" class="btn btn-primary">Login</button>
                </div>
            </form>
            <h1 class="mb-4 mt-4 display-5">New User?</h1>
            <div class="mb-3">
                <button type="submit" name="register" class="btn btn-primary" onclick="@("window.location.href='" + @Url.Action("Index", "Register") + "'");">Register</button>
            </div>
        </div>
    </div>
</div>

 @section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}